# Generated by Django 5.2.3 on 2025-10-11 00:51

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('organization', models.CharField(help_text='Who gave this achievement', max_length=200)),
                ('achievement_type', models.CharField(choices=[('award', 'Award'), ('certification', 'Certification'), ('competition', 'Competition'), ('recognition', 'Recognition'), ('other', 'Other')], max_length=20)),
                ('date', models.DateField(help_text='When you received it')),
                ('description', models.TextField(blank=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(help_text='e.g., BSc Computer Science', max_length=200)),
                ('institution', models.CharField(help_text='University/School name', max_length=200)),
                ('location', models.CharField(max_length=100)),
                ('degree_type', models.CharField(choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PhD'), ('diploma', 'Diploma'), ('highschool', 'High School'), ('other', 'Other')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave empty if ongoing', null=True)),
                ('gpa', models.CharField(blank=True, help_text='e.g., 3.09/4.00', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Key modules, achievements')),
                ('is_current', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Education',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave empty if current job', null=True)),
                ('description', models.TextField(help_text='What you did at this job')),
                ('is_current', models.BooleanField(default=False, help_text='Currently working here?')),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Experiences',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('bio', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('location', models.CharField(max_length=100)),
                ('linkedin_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile/')),
                ('resume_file', models.FileField(blank=True, null=True, upload_to='resumes/')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('technologies', models.CharField(help_text='e.g., Django, Python, HTML/CSS', max_length=300)),
                ('github_url', models.URLField(blank=True)),
                ('live_url', models.URLField(blank=True, help_text='Live demo link if available')),
                ('image', models.ImageField(blank=True, help_text='Project screenshot', null=True, upload_to='projects/')),
                ('is_featured', models.BooleanField(default=False, help_text='Show on homepage?')),
                ('order', models.IntegerField(default=0, help_text='Display order (lower numbers show first)')),
                ('created_date', models.DateField(help_text='When you built this')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['order', '-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('language', 'Programming Language'), ('framework', 'Framework/Library'), ('database', 'Database'), ('tool', 'Tool'), ('soft', 'Soft Skill')], max_length=20)),
                ('proficiency', models.IntegerField(default=50, help_text='0-100 skill level')),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['category', 'order'],
            },
        ),
    ]
